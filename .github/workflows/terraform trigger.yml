name: Terraform Workflow

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose action'
        required: true
        default: 'apply'
        options:
          - 'apply'
          - 'destroy'

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-lastest
    

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS Credentials Action For GitHub Actions
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.SECRET_KEY }}
        aws-region: ${{ secrets.REGION }}

    - name: Setup Terraform CLI
      uses: hashicorp/setup-terraform@v2.0.2


    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.

    - name: Terraform Init
      run: terraform init
    
    - name: Terraform Action
      run: |
          if [ "${{ github.event.inputs.action }}" == "apply" ]; then
            terraform apply -auto-approve -var access_key=${{secrets.ACCESS_KEY}} -var secret_key=${{secrets.SECRET_KEY}} -input=false

          elif [ "${{ github.event.inputs.action }}" == "destroy" ]; then
            terraform Destroy -auto-approve -var access_key=${{secrets.ACCESS_KEY}} -var secret_key=${{secrets.SECRET_KEY}} -input=false
          fi
    
